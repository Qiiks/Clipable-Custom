{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-05-09T00:00:00-04:00",
    "name": "Clipable Auto-Setup",
    "author": "sanve@gmail.com",
    "description": "A self-hosted video clip sharing platform with automatic setup, optimized for low resource usage (1 CPU, 2-3GB RAM)",
    "features": ["mysql", "minio"],
    "docker_images": {
        "base": "debian:bullseye-slim"
    },
    "file_denylist": [],
    "startup": "#!/bin/bash\nset -e\n\n# Ensure proper permissions\nchown -R 1000:1000 /mnt/server\n\n# Start services\ndocker-compose -f docker-compose.services.yml up -d\n\n# Wait for services\necho \"Waiting for MySQL...\"\nuntil nc -z -w5 127.0.0.1 3306; do\n  sleep 1\ndone\n\necho \"Waiting for MinIO...\"\nuntil nc -z -w5 127.0.0.1 9000; do\n  sleep 1\ndone\n\n# Configure MinIO\nwget -q https://dl.min.io/client/mc/release/linux-amd64/mc\nchmod +x mc\n./mc alias set myminio http://127.0.0.1:9000 clipableadmin clipableadmin\n./mc mb myminio/clipable || true\n\n# Set environment variables for the application\nexport DB_HOST=127.0.0.1\nexport DB_PORT=3306\nexport DB_NAME=clipable\nexport DB_USER=clipable\nexport DB_PASS=clipablepass\nexport S3_ADDRESS=127.0.0.1:9000\nexport S3_ACCESS=clipableadmin\nexport S3_SECRET=clipableadmin\nexport S3_BUCKET=clipable\nexport S3_SECURE=false\nexport GOMAXPROCS=1\nexport NODE_OPTIONS=\"--max-old-space-size=1024\"\n\n# Build backend\ncd backend\ngo build -o clipable\n\n# Build frontend\ncd ../frontend\npnpm install --production\nNEXT_TELEMETRY_DISABLED=1 pnpm build\n\n# Configure services\ncp ../nginx.conf /etc/nginx/nginx.conf\ncp ../supervisord.conf ./supervisord.conf\n\n# Start supervisor\nsupervisord -c ./supervisord.conf",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Server Started!\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\n\n# Exit on any error\nset -e\n\n# Clear existing directory\nrm -rf /mnt/server/*\n\n# Switch to server directory\ncd /mnt/server\n\n# Update package lists and install required packages\napt-get update\napt-get install -y --no-install-recommends \\\n    git \\\n    nginx \\\n    supervisor \\\n    docker.io \\\n    docker-compose \\\n    default-mysql-client \\\n    wget \\\n    curl \\\n    netcat \\\n    bash \\\n    golang \\\n    build-essential\n\n# Install nvm\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\n\n# Load nvm\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n\n# Install Node.js 18\nnvm install 18\nnvm use 18\n\n# Install npm globally\nnpm install -g pnpm\n\n# Clone repository\nrm -rf /mnt/server/*\ngit clone https://github.com/Qiiks/Clipable-Custom.git .\n\n# Create service configurations\ncat > docker-compose.services.yml <<'EOF'\nversion: '3.8'\nservices:\n  db:\n    image: mysql:8\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: clipablerootpass\n      MYSQL_DATABASE: clipable\n      MYSQL_USER: clipable\n      MYSQL_PASSWORD: clipablepass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - mysql_data:/var/lib/mysql\n    command: >\n      --default-authentication-plugin=mysql_native_password\n      --innodb-buffer-pool-size=256M\n      --max-connections=50\n      --performance-schema=0\n\n  minio:\n    image: minio/minio\n    command: server /data --console-address \":9001\"\n    environment:\n      MINIO_ROOT_USER: clipableadmin\n      MINIO_ROOT_PASSWORD: clipableadmin\n    ports:\n      - \"9000:9000\"\n      - \"9001:9001\"\n    volumes:\n      - minio_data:/data\n\nvolumes:\n  mysql_data:\n  minio_data:\nEOF\n\n# Create required directories with proper permissions\nmkdir -p /mnt/server/logs\nchown -R 1000:1000 /mnt/server/logs\n\necho \"Installation completed successfully!\"",
            "container": "base",
            "entrypoint": "bash"
        }
    },
    "variables": []
}